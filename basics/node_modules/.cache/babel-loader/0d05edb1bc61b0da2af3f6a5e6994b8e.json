{"ast":null,"code":"var _jsxFileName = \"/home/hyder/Desktop/React_Max/basics/src/App.js\";\nimport React, { useState } from \"react\";\nimport Display from \"./components/css_module_counter/Display\";\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\nexport default function App() {\n  let [count, setCount] = useState(0);\n  setTimeout(() => {\n    setCount(count + 1);\n  }, 1000);\n\n  let incrementHandler = () => {\n    setCount(count + 1);\n  };\n\n  let decrementHandler = () => {\n    setCount(count - 1);\n  };\n\n  return /*#__PURE__*/React.createElement(ErrorBoundary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Display, {\n    count: count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/hyder/Desktop/React_Max/basics/src/App.js"],"names":["React","useState","Display","ErrorBoundary","App","count","setCount","setTimeout","incrementHandler","decrementHandler"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,OAAP,MAAoB,yCAApB;AAEA,OAAOC,aAAP,MAA0B,+BAA1B;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAhC;AAEAM,EAAAA,UAAU,CAAC,MAAM;AACfD,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFS,EAEP,IAFO,CAAV;;AAIA,MAAIG,gBAAgB,GAAG,MAAM;AAC3BF,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,MAAII,gBAAgB,GAAG,MAAM;AAC3BH,IAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD","sourcesContent":["import React, { useState } from \"react\";\n\nimport Display from \"./components/css_module_counter/Display\";\n\nimport ErrorBoundary from \"./ErrorBoundary/ErrorBoundary\";\n\nexport default function App() {\n  let [count, setCount] = useState(0);\n\n  setTimeout(() => {\n    setCount(count + 1);\n  }, 1000);\n\n  let incrementHandler = () => {\n    setCount(count + 1);\n  };\n\n  let decrementHandler = () => {\n    setCount(count - 1);\n  };\n\n  return (\n    <ErrorBoundary>\n      <Display count={count} />\n    </ErrorBoundary>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}