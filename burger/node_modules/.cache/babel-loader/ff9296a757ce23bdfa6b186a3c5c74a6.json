{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hyder/Desktop/React_Max/burger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\nexport default class BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 1,\n        bacon: 1,\n        cheese: 2,\n        meat: 2\n      },\n      totalPrice: 4,\n      purchaseable: false\n    };\n\n    this.updatePurchaseState = () => {\n      const ingredients = { ...this.state.ingredients\n      };\n      let sum = Object.keys(ingredients).map(ing => {\n        return ingredients[ing];\n      });\n      sum = sum.reduce((acc, el) => {\n        return acc + el;\n      }, 0);\n      this.setState({\n        purchaseable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; //Handling Price\n\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount === 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; //Handling Price\n\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        price: this.state.totalPrice,\n        ingredientRemoved: this.removeIngredientHandler,\n        ingredientAdded: this.addIngredientHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/React_Max/burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","updatePurchaseState","sum","Object","keys","map","ing","reduce","acc","el","setState","addIngredientHandler","type","oldCount","updatedCount","updatedIngredients","priceAddition","oldPrice","newPrice","removeIngredientHandler","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nexport default class BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 1,\n      bacon: 1,\n      cheese: 2,\n      meat: 2,\n    },\n    totalPrice: 4,\n    purchaseable: false,\n  };\n\n  updatePurchaseState = () => {\n    const ingredients = { ...this.state.ingredients };\n\n    let sum = Object.keys(ingredients).map((ing) => {\n      return ingredients[ing];\n    });\n\n    sum = sum.reduce((acc, el) => {\n      return acc + el;\n    }, 0);\n\n    this.setState({ purchaseable: sum > 0 });\n  };\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n\n    updatedIngredients[type] = updatedCount;\n\n    //Handling Price\n\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  };\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n\n    if (oldCount === 0) return;\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n\n    updatedIngredients[type] = updatedCount;\n\n    //Handling Price\n\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n          price={this.state.totalPrice}\n          ingredientRemoved={this.removeIngredientHandler}\n          ingredientAdded={this.addIngredientHandler}\n        />\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}