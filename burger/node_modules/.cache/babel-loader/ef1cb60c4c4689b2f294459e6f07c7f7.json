{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/hyder/Desktop/react_max/burger/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from \"react\";\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\nimport Modal from \"../../components/UI/Modal/Modal\";\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\";\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\nexport default class BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 0,\n      purchaseable: false,\n      purchasing: false\n    };\n\n    this.purchaseContinueHandler = () => {\n      alert(\"Continue with Purchase !\");\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.updatePurchaseState = updatedIngredients => {\n      const ingredients = { ...updatedIngredients\n      };\n      let sum = Object.keys(ingredients).map(ing => {\n        return ingredients[ing];\n      });\n      sum = sum.reduce((acc, el) => {\n        return acc + el;\n      }, 0);\n      this.setState({\n        purchaseable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      const updatedCount = oldCount + 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; //Handling Price\n\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice + priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const oldCount = this.state.ingredients[type];\n      if (oldCount === 0) return;\n      const updatedCount = oldCount - 1;\n      const updatedIngredients = { ...this.state.ingredients\n      };\n      updatedIngredients[type] = updatedCount; //Handling Price\n\n      const priceAddition = INGREDIENT_PRICES[type];\n      const oldPrice = this.state.totalPrice;\n      const newPrice = oldPrice - priceAddition;\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        show: this.state.purchasing,\n        modalClosed: this.purchaseCancelHandler,\n        children: /*#__PURE__*/_jsxDEV(OrderSummary, {\n          ingredients: this.state.ingredients\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Burger, {\n        ingredients: this.state.ingredients\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BuildControls, {\n        ordered: this.purchaseHandler,\n        purchaseable: this.state.purchaseable,\n        price: this.state.totalPrice,\n        ingredientRemoved: this.removeIngredientHandler,\n        ingredientAdded: this.addIngredientHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/hyder/Desktop/react_max/burger/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchaseable","purchasing","purchaseContinueHandler","alert","purchaseHandler","setState","purchaseCancelHandler","updatePurchaseState","updatedIngredients","sum","Object","keys","map","ing","reduce","acc","el","addIngredientHandler","type","oldCount","updatedCount","priceAddition","oldPrice","newPrice","removeIngredientHandler","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport Burger from \"../../components/Burger/Burger\";\nimport BuildControls from \"../../components/Burger/BuildControls/BuildControls\";\n\nimport Modal from \"../../components/UI/Modal/Modal\"\n\nimport OrderSummary from \"../../components/Burger/OrderSummary/OrderSummary\"\n\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7,\n};\n\nexport default class BurgerBuilder extends Component {\n  state = {\n    ingredients: {\n      salad: 0,\n      bacon: 0,\n      cheese: 0,\n      meat: 0,\n    },\n    totalPrice: 0,\n    purchaseable: false,\n    purchasing:false\n  };\n\n\n  purchaseContinueHandler = () =>{\n    alert(\"Continue with Purchase !\")\n  }\n\n  purchaseHandler = () =>{\n    this.setState({purchasing:true})\n  }\n\n  purchaseCancelHandler = () =>{\n    this.setState({purchasing:false})\n  }\n  updatePurchaseState = (updatedIngredients) => {\n    const ingredients = { ...updatedIngredients };\n\n    let sum = Object.keys(ingredients).map((ing) => {\n      return ingredients[ing];\n    });\n\n    sum = sum.reduce((acc, el) => {\n      return acc + el;\n    }, 0);\n\n    this.setState({ purchaseable: sum > 0 });\n  };\n\n  addIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n    const updatedCount = oldCount + 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n\n    updatedIngredients[type] = updatedCount;\n\n    //Handling Price\n\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice + priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  removeIngredientHandler = (type) => {\n    const oldCount = this.state.ingredients[type];\n\n    if (oldCount === 0) return;\n    const updatedCount = oldCount - 1;\n    const updatedIngredients = {\n      ...this.state.ingredients,\n    };\n\n    updatedIngredients[type] = updatedCount;\n\n    //Handling Price\n\n    const priceAddition = INGREDIENT_PRICES[type];\n    const oldPrice = this.state.totalPrice;\n    const newPrice = oldPrice - priceAddition;\n    this.setState({ totalPrice: newPrice, ingredients: updatedIngredients });\n    this.updatePurchaseState(updatedIngredients);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n          <OrderSummary ingredients={this.state.ingredients}/>\n        </Modal>\n        <Burger ingredients={this.state.ingredients} />\n        <BuildControls\n        ordered = {this.purchaseHandler}\n          purchaseable={this.state.purchaseable}\n          price={this.state.totalPrice}\n          ingredientRemoved={this.removeIngredientHandler}\n          ingredientAdded={this.addIngredientHandler}\n        />\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}